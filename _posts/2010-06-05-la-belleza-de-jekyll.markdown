---
layout: post
title: La belleza de Jekyll
---

{{ page.title }}
================

{{ page.date | date: "%d/%m/%Y"}} &ndash; Barcelona

En palabras de su creador, [Jekyll](http://github.com/mojombo/jekyll) *is a simple, blog aware, static site generator*. 

¿Qué significa esto? A contracorriente de la sofisticación y complejidad actual de las plataformas de publicación de contenidos, Jekyll elige el camino de la simplicidad. Jekyll convierte un conjunto de plantillas y texto plano siguiendo un formato muy simple de marcado en una estructura web similar a la de un blog, pero con una notable diferencia: el resultado son páginas web estáticas, es decir, documentos html. ¿Significa esto un paso hacia atrás en la evolución de la web? No lo creo. En mi opinión, Jekyll forma parte de la evolución lógica de las wikis hacia un terreno donde convergen cuatro metas de gran importancia:

* **La necesidad de un estándar del lenguaje de marcas**. La mayoría de wikis utilizan un lenguaje de marcas propio. Quien haya redactado o editado un artículo en la Wikipedia habrá comprobado que la notación no es presente en otras plataformas wikis. Esta falta de estandarización o ausencia de un lenguaje de marcas que permitiera la reutilización del contenidos de una wiki a otra ha ido en detrimento de su adopción como herramienta de edición. Afortunadamente esta situación se está corrigiendo de manera natural y cada vez son más las plataformas que adoptan un planteamiento agnóstico y dejan al usuario la decisión de elegir el conversor del lenguaje de marcas al lenguaje HTML. 
* **La convivencia natural de la edición *on-line/off-line***. Una wiki es una página web en la que muchos pueden participar y colaborar en la creación de uno o varios documentos. La edición del documento se realiza directamente en la web a través de un editor simple de texto plano. Este editor es la única ventana posible de edición que ofrece la wiki a los usuarios si quieren introducir un nuevo contenido a la wiki o corregir un contenido o parte de él antiguo. Quienes están acostumbrados a la edición *off-line* (los documentos guardados en el disco duro del ordenador, en un lápiz de memoria o en el disco duro del portátil) encuentran, como mínimo, desconcertante la edición exclusivamente *on-line* de los contenidos, luego era previsible ver la evolución de las llamadas suites ofimáticas *on-line* (Google Docs o Zoho) hacia un modelo de trabajo intermedio entre la copia en local y la copia *en la nube*. Este salto cualitativo es necesario, urgente y determinante si autores y editores de la wiki necesitan escapar de la jaula de edición web y utilizar un editor avanzado de texto propio. 
* Una **gestión del control de versiones** de los documentos más eficiente y versátil. La mayoría de la wikis actuales incorporan un sistema lineal del histórico del documento, desde su creación hasta la última revisión realizada. Los autores pueden siempre recuperar una revisión anterior, o comparar dos revisiones diferentes. En comparación con sistemas actuales de control de versiones (Git, Subversion, Mercurial,...), el sistema interno de control de versiones de la wiki es realmente limitado, incluso ineficiente. En lugar de una metodología de control de versiones distribuida (cada autor guarda su propia copia en local y envía los cambios cuando es necesario a la copia *oficial*), se sigue una metodología de control de versiones centralizada (los autores realizan los cambios en la copia *oficial*). 
* **La creación de instantáneas**. La exportación del contenido a formatos finales ha dejado de ser una función accesoria a imprescindible. La información ha de ser transportable a todos los dispositivos posibles, desde el eterno papel a los nuevos *gadgets* de lectura digital. Es inútil pensar que la información presentada en la wiki se adaptará correctamente a todos los dispositivos. La wiki se entiende como el lugar donde almacenamos la información en la forma más simple posible e independiente a formatos sofisticados, es decir, en texto plano, y por esto mismo, es posible automatizar la conversión a formatos que optimicen su presentación y lectura según sea el dispositivo al cual va dirigido. 

Estas metas representan un horizonte de lo que deberíamos interpretar como una wiki en la actualidad. Jekyll permite elegir entre [Markdown](http://daringfireball.net/projects/markdown/) y [Textile](http://textism.com/tools/textile/) como lenguaje de marcas; la edición *on-line* queda relegada a un segundo plano, pero es posible: Jekyll es el sistema adoptado por [GitHub](http://github.com/) para la creación de páginas estáticas, luego hay la posibilidad de editar en línea un documento. Finalmente, Jekyll no incorpora ningún sistema de gestión de versiones. En mi caso he optado por [Git](http://git-scm.com/) y, el hecho de publicar las fuentes en GitHub, cualquiera puede tener una copia en local tanto de los documentos como de la lógica del sistema. Finalmente, el que Jekyll sea un sistema basado en código abierto, pero sobretodo, asequible por su simplicidad, facilita la creación de exportadores a formatos finales, es decir, que la lectura de la información sea óptima desde la pequeña pantalla de un móvil a la de un sofisticado *e-reader*.